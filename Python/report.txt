
    
=== PROCESSING LOG ===
--- Sleep Scoring Pipeline - Iteration 1 ---

=== STEP 1: DATA LOADING ===
Using EDF: /Users/nayasarianasr/Desktop/SP_project/Untitled/Python/data/training/H09.edf
Using XML: /Users/nayasarianasr/Desktop/SP_project/Untitled/Python/data/training/H09.xml
Loading training data from /Users/nayasarianasr/Desktop/SP_project/Untitled/Python/data/training/H09.edf and /Users/nayasarianasr/Desktop/SP_project/Untitled/Python/data/training/H09.xml...
Identified channels:
  EEG: ['EEG-C1', 'EEG-C2']
  EOG: ['EOG-L', 'EOG-R']
  EMG: ['EMG-Chin']
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
  EEG: 2 channels, 3750 samples/epoch, 125.0 Hz
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
  EOG: 2 channels, 3750 samples/epoch, 125.0 Hz
NOTE: pick_channels() is a legacy function. New code should use inst.pick(...).
  EMG: 1 channels, 3750 samples/epoch, 125.0 Hz

Loaded 1049 epochs (8.74 hours)
Sleep stage distribution:
  Wake: 396 epochs (37.7%)
  N1: 10 epochs (1.0%)
  N2: 259 epochs (24.7%)
  N3: 277 epochs (26.4%)
  REM: 108 epochs (10.3%)
Detected multi-channel loader return.
EEG shape: (1049, 3750)
EOG shape: (1049, 2, 3750)
EMG shape: (1049, 1, 3750)
Labels shape: (1049,)

=== STEP 2: PREPROCESSING ===
Preprocessing data for iteration 1...
Processing single-channel data (backward compatibility)
Preprocessed data shape: (1049, 3750)

=== STEP 3: FEATURE EXTRACTION ===
Extracting features for iteration 1...
Processing single-channel data (backward compatibility)
WARNING: Only 3 features extracted, target is 16 for iteration 1
Students must implement the remaining time-domain features!
Extracted features shape: (1049, 3)

=== STEP 4: FEATURE SELECTION ===
Selecting features for iteration 1...
Input features shape: (1049, 3)
Early iteration - using all available features
Selected features shape: (1049, 3)
Selected features shape: (1049, 3)

=== STEP 5: CLASSIFICATION ===
Training knn classifier...
Features shape: (1049, 3), Labels shape: (1049,)
Using stratified train/test split to maintain class balance
Training set: 839 samples, Test set: 210 samples
Using k-NN with k=5
Training model...
Overall accuracy: 0.376

======================================================================
SLEEP STAGE CLASSIFICATION PERFORMANCE METRICS
======================================================================
Overall Accuracy: 0.376
Macro F1-Score: 0.109
Weighted F1-Score: 0.206

Confusion Matrix:
      Wake  N1  N2  N3  REM
Wake    79   0   0   0    0
N1       2   0   0   0    0
N2      52   0   0   0    0
N3      55   0   0   0    0
REM     22   0   0   0    0

Per-Class Performance Metrics:
----------------------------------------------------------------------
Stage    Accuracy   Sensitivity  Specificity  F1-Score  
----------------------------------------------------------------------
Wake     1.000      1.000        0.000        0.547     
N1       0.000      0.000        1.000        0.000     
N2       0.000      0.000        1.000        0.000     
N3       0.000      0.000        1.000        0.000     
REM      0.000      0.000        1.000        0.000     
----------------------------------------------------------------------

Class Distribution in Test Set:
Wake: 79 samples (37.6%)
N1: 2 samples (1.0%)
N2: 52 samples (24.8%)
N3: 55 samples (26.2%)
REM: 22 samples (10.5%)

Notes for Sleep Scoring:
- Sensitivity = Recall = True Positive Rate (correctly identified stages)
- Specificity = True Negative Rate (correctly rejected stages)
- Sleep stage imbalance is natural (more N2, less N1/REM)
- Consider Cohen's kappa for chance-corrected agreement
- Clinical focus: High sensitivity for REM and N3 stages

TODO: Students should add Cohen's kappa and ROC-AUC metrics
Trained knn classifier.

=== STEP 6: VISUALIZATION ===
Visualizing results...

=== STEP 7: PROCESSING LOG & REPORT GENERATION ===



    # Sleep Scoring Report - Iteration 1

    ## Model
    KNeighborsClassifier

    ## Performance
    Accuracy: ...
    Kappa: ...
    F1-score: ...

    ## Notes
    This is a dummy report. Implement full report generation.
    